buildscript {
    ext {
	springBootVersion = '1.5.7.RELEASE'
	springDependencyManagementVersion = '1.0.3.RELEASE'
    }
    repositories {
	maven {
            url "https://plugins.gradle.org/m2/"
        }
	mavenCentral()
    }
    dependencies {
	classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
	mavenBom "com.vaadin:vaadin-bom:8.1.5"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:1.5.0.RELEASE"
    }
}

dependencies {
    compile('io.pivotal:cloud-native-spring:1.0-SNAPSHOT')
    compileOnly('org.projectlombok:lombok:1.16.18')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-feign')
    compile('org.springframework.cloud:spring-cloud-starter-ribbon')
    compile('com.vaadin:vaadin-spring-boot-starter')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

repositories {
    maven {
        url "https://repo.spring.io/plugins-release"
    }
    mavenCentral()
    mavenLocal()
}

jar {
    excludes = ['**/application.yml']
}

task execJar (type: Jar, dependsOn: jar) {
    classifier = 'exec'
    from sourceSets.main.output
}

bootRepackage  {
    withJarTask = tasks['execJar']
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.example'
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
